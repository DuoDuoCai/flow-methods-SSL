import matplotlib.pyplot as plt
import numpy as np
'''
----------------------training acc--------------------------
[0.251, 0.2515, 0.2525, 0.2515, 0.251, 0.2515, 0.2525, 0.2525, 0.253, 0.2635, 0.332, 0.5635, 0.7, 0.7355, 0.7405, 0.7555, 0.8005, 0.85, 0.848, 0.869, 0.895, 0.8935, 0.902, 0.8765, 0.895, 0.893, 0.9135, 0.9185, 0.9185, 0.9235, 0.932, 0.937, 0.946, 0.937, 0.9495, 0.95, 0.9475, 0.936, 0.9575, 0.966, 0.9665, 0.972, 0.97, 0.973, 0.9745, 0.975, 0.9765, 0.977, 0.978, 0.9775, 0.978, 0.9785, 0.9785, 0.9785, 0.9785, 0.9785, 0.9785]

[0.2435666666666667, 0.24446666666666664, 0.24506666666666665, 0.2439666666666667, 0.2438666666666667, 0.2444, 0.2446, 0.2450333333333333, 0.2489333333333333, 0.2582666666666667, 0.3385333333333333, 0.5547, 0.6885333333333334, 0.7243666666666667, 0.7265666666666667, 0.7428, 0.7841666666666666, 0.8271333333333332, 0.8255, 0.8408333333333332, 0.8517666666666668, 0.8524333333333333, 0.8537333333333332, 0.8378666666666668, 0.8417, 0.8442333333333332, 0.8576, 0.8534666666666668, 0.8631666666666666, 0.861, 0.8672333333333332, 0.8653, 0.8657666666666666, 0.8643333333333332, 0.8576333333333332, 0.8632, 0.8611, 0.8491, 0.8582, 0.8642, 0.8699333333333334, 0.8663666666666666, 0.8675666666666666, 0.8695, 0.8693333333333334, 0.8673333333333332, 0.87, 0.8694, 0.8698666666666666, 0.8687, 0.8683333333333334, 0.8684333333333332, 0.8690333333333332, 0.8690666666666667, 0.8686666666666666, 0.8683666666666666, 0.8682]

----------------------validation acc--------------------------
[0.25, 0.25, 0.25, 0.25, 0.25, 0.25, 0.25, 0.25, 0.253125, 0.275, 0.33125, 0.571875, 0.684375, 0.709375, 0.70625, 0.73125, 0.775, 0.81875, 0.821875, 0.8625, 0.8625, 0.853125, 0.8625, 0.86875, 0.846875, 0.865625, 0.86875, 0.859375, 0.884375, 0.878125, 0.88125, 0.89375, 0.875, 0.878125, 0.85625, 0.871875, 0.88125, 0.88125, 0.86875, 0.865625, 0.878125, 0.875, 0.88125, 0.88125, 0.884375, 0.878125, 0.88125, 0.88125, 0.884375, 0.875, 0.884375, 0.8875, 0.8875, 0.884375, 0.8875, 0.8875, 0.884375]

'''
train_accs= [0.251, 0.2515, 0.2525, 0.2515, 0.251, 0.2515, 0.2525, 0.2525, 0.253, 0.2635, 0.332, 0.5635, 0.7, 0.7355, 0.7405, 0.7555, 0.8005, 0.85, 0.848, 0.869, 0.895, 0.8935, 0.902, 0.8765, 0.895, 0.893, 0.9135, 0.9185, 0.9185, 0.9235, 0.932, 0.937, 0.946, 0.937, 0.9495, 0.95, 0.9475, 0.936, 0.9575, 0.966, 0.9665, 0.972, 0.97, 0.973, 0.9745, 0.975, 0.9765, 0.977, 0.978, 0.9775, 0.978, 0.9785, 0.9785, 0.9785, 0.9785, 0.9785, 0.9785]

train_accs1=[0.2435666666666667, 0.24446666666666664, 0.24506666666666665, 0.2439666666666667, 0.2438666666666667, 0.2444, 0.2446, 0.2450333333333333, 0.2489333333333333, 0.2582666666666667, 0.3385333333333333, 0.5547, 0.6885333333333334, 0.7243666666666667, 0.7265666666666667, 0.7428, 0.7841666666666666, 0.8271333333333332, 0.8255, 0.8408333333333332, 0.8517666666666668, 0.8524333333333333, 0.8537333333333332, 0.8378666666666668, 0.8417, 0.8442333333333332, 0.8576, 0.8534666666666668, 0.8631666666666666, 0.861, 0.8672333333333332, 0.8653, 0.8657666666666666, 0.8643333333333332, 0.8576333333333332, 0.8632, 0.8611, 0.8491, 0.8582, 0.8642, 0.8699333333333334, 0.8663666666666666, 0.8675666666666666, 0.8695, 0.8693333333333334, 0.8673333333333332, 0.87, 0.8694, 0.8698666666666666, 0.8687, 0.8683333333333334, 0.8684333333333332, 0.8690333333333332, 0.8690666666666667, 0.8686666666666666, 0.8683666666666666, 0.8682]


test_accs= [0.25, 0.25, 0.25, 0.25, 0.25, 0.25, 0.25, 0.25, 0.253125, 0.275, 0.33125, 0.571875, 0.684375, 0.709375, 0.70625, 0.73125, 0.775, 0.81875, 0.821875, 0.8625, 0.8625, 0.853125, 0.8625, 0.86875, 0.846875, 0.865625, 0.86875, 0.859375, 0.884375, 0.878125, 0.88125, 0.89375, 0.875, 0.878125, 0.85625, 0.871875, 0.88125, 0.88125, 0.86875, 0.865625, 0.878125, 0.875, 0.88125, 0.88125, 0.884375, 0.878125, 0.88125, 0.88125, 0.884375, 0.875, 0.884375, 0.8875, 0.8875, 0.884375, 0.8875, 0.8875, 0.884375]

print(len(train_accs))
print(len(train_accs1))
print(len(test_accs))

# test_accs = ( 116*np.array(val_accs)+24*np.array(test_accs))/140
epochs =[e*6.3 for e in list( range(len(test_accs)))]  # X-axis: epochs or steps

plt.plot(epochs, train_accs, label='Labeled Train Accuracy')
plt.plot(epochs, train_accs1, label='Unlabeled Train Accuracy')
plt.plot(epochs, test_accs, label='Test Accuracy')

plt.xlabel('Epoch')
plt.ylabel('Accuracy')
plt.title('Accuracy over Time')
plt.legend()
plt.grid(True)
plt.show()